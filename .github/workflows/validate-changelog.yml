name: Validate PR changelog

on:
  workflow_call:
    inputs:
      changelog-file:
        description: 'Path to the changelog file'
        required: false
        type: string
        default: 'CHANGELOG.md'
      error-on-template:
        description: 'Error message when provided MR template string is found in the description'
        required: false
        type: string
        default: ''
    outputs:
      level:
        description: 'Detected change level (patch, minor, major)'
        value: ${{ jobs.validate-changelog.outputs.level }}
      notes:
        description: 'Extracted changelog notes'
        value: ${{ jobs.validate-changelog.outputs.notes }}

jobs:
  validate-changelog:
    runs-on: ubuntu-latest
    name: Validate PR description - changelog
    outputs:
      level: ${{ steps.extract-changelog.outputs.level }}
      notes: ${{ steps.extract-changelog.outputs.note }}
    steps:
      - name: Extract changelog section
        id: extract-changelog
        env:
          PR_DESCRIPTION: ${{ github.event.pull_request.body }}
          DELIMITER: "EOF_CHANGELOG"
          CHANGELOG_FILE: ${{ inputs.changelog-file }}
          ERROR_ON_TEMPLATE: ${{ inputs.error-on-template }}
        run: | #shell
          function decho() {
            if [ ! -z "$CHANGELOG_DEBUG" ]; then
              echo "Debug:" "$@" 1>&2
            fi
          }

          function extract_section() {
            local SOURCE_TEXT=$1
            
            if echo "$SOURCE_TEXT" | grep -qi '/changelog'; then
              decho "found /changelog"
              if echo "$SOURCE_TEXT" | grep -qi '/-changelog'; then
                decho "found /-changelog"
                RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/\/changelog/I,/\/-changelog/Ip'`
              else
                decho "fallback without /-changelog"
                RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/\/changelog/I,$p'`
              fi
            else
              decho "no /changelog found"
              RAW_CHANGELOG_SECTION=
            fi

            # If no changelog section found, try getting it from ## Changelog and ---
            if [ -z "$RAW_CHANGELOG_SECTION" ]; then
              decho "starting ## Changelog and --- checks"
              if echo "$SOURCE_TEXT" | grep -qi '## Changelog'; then
                decho "found ## Changelog"
                if echo "$SOURCE_TEXT" | grep -q -- '---'; then
                  decho "found ---"
                  RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/## Changelog/I,/---/p'`
                  if [ -z "$RAW_CHANGELOG_SECTION" ]; then
                    decho "fallback without ---"
                    RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/## Changelog/I,$p'`
                  fi
                else
                  decho "fallback without ---"
                  RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/## Changelog/I,$p'`
                fi
              else
                decho "no ## Changelog found"
                RAW_CHANGELOG_SECTION=
              fi
            fi

            # If no changelog section found, try getting it from <details><summary>Changelog {patch|minor|major}</summary>...</details> tag
            if [ -z "$RAW_CHANGELOG_SECTION" ]; then
              decho "starting <details><summary>Changelog checks"
              if echo "$SOURCE_TEXT" | grep -qi '<details><summary>Changelog'; then
                decho "found <details><summary>Changelog"
                RAW_CHANGELOG_SECTION=`echo "$SOURCE_TEXT" | sed -n '/<details><summary>Changelog/I,/<\/details>/Ip'`
              fi
            fi

            if [ -z "$RAW_CHANGELOG_SECTION" ]; then
              echo -e "No changelog section. Use /changelog {patch|minor|major} followed by your changelog notes" 1>&2
              if [ ! -z "$EXAMPLE_CHANGELOG" ]; then
                echo -e "Example changelog section:\n$EXAMPLE_CHANGELOG" 1>&2
              fi
              exit 1
            fi
            echo "$RAW_CHANGELOG_SECTION"
          }

          function extract_changelog() {
            local SOURCE_TEXT=$1
            local CHANGELOG_NOTE=`echo "$SOURCE_TEXT" | grep -vi '/changelog' | grep -vi '/-changelog' | grep -vi '<details><summary>Changelog' | grep -vi '</details>' | grep -vi '## Changelog' | grep -v -- '---'`

            if [ -z "$CHANGELOG_NOTE" ]; then
              echo -e "No changelog notes found changelog section. Use /changelog {patch|minor|major} followed by your changelog notes" 1>&2
              if [ ! -z "$EXAMPLE_CHANGELOG" ]; then
                echo -e "Example changelog section:\n$EXAMPLE_CHANGELOG" 1>&2
              fi
              exit 1
            fi

            echo "$CHANGELOG_NOTE"
          }

          function extract_change_level() {
            local SOURCE_TEXT=$1
            if echo "$SOURCE_TEXT" | grep -i '/changelog' | grep -qiE 'patch|minor|major'; then
              CHANGE_LEVEL=`echo "$SOURCE_TEXT" | grep -i '/changelog' | grep -iEo 'patch|minor|major'`
            elif echo "$SOURCE_TEXT" | grep -i '## Changelog' | grep -qiE 'patch|minor|major'; then
              CHANGE_LEVEL=`echo "$SOURCE_TEXT" | grep -i '## Changelog' | grep -iEo 'patch|minor|major'`
            elif echo "$SOURCE_TEXT" | grep -i '<details><summary>Changelog' | grep -qiE 'patch|minor|major'; then
              CHANGE_LEVEL=`echo "$SOURCE_TEXT" | grep -i '<details><summary>Changelog' | grep -iEo 'patch|minor|major'`
            else
              CHANGE_LEVEL="${DEFAULT_CHANGE_LEVEL:-patch}"
            fi
            echo "$CHANGE_LEVEL"
          }

          if [[ -z "$PR_DESCRIPTION" ]]; then
            echo "Error: PR description is empty"
            exit 1
          fi

          if [ ! -z "$ERROR_ON_TEMPLATE" ]; then
            if echo "$PR_DESCRIPTION" | grep -qi -- "$ERROR_ON_TEMPLATE"; then
              echo "Your PR description contains an MR template $ERROR_ON_TEMPLATE. Please fill out the description and include correct Changelog section in it." 1>&2
              exit 1
            fi
          fi
          
          RAW_CHANGELOG_SECTION=`extract_section "$PR_DESCRIPTION"`
          CHANGELOG_NOTE=`extract_changelog "$RAW_CHANGELOG_SECTION"`
          COMMIT_CHANGE_LEVEL=`extract_change_level "$RAW_CHANGELOG_SECTION"`
          
          {
            echo "level=$COMMIT_CHANGE_LEVEL"
            echo "note<<$DELIMITER"
            echo "$CHANGELOG_NOTE"
            echo "$DELIMITER"
          } >> $GITHUB_OUTPUT

      - name: Validate changelog content
        env:
          NOTES: ${{ steps.extract-changelog.outputs.note }}
        run: | #shell
          LEVEL="${{ steps.extract-changelog.outputs.level }}"
          
          if [[ -z "$NOTES" ]]; then
            echo "Error: No changelog notes found"
            exit 1
          fi
          
          echo "âœ… Valid changelog found ($LEVEL)"
          echo "$NOTES"